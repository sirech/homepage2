{"componentChunkName":"component---src-templates-blog-index-js","path":"/blog/tags/practices/","result":{"pageContext":{"siteMetadata":{"title":"Mario Fernandez","description":"This is the blog from Mario Fernandez, a Software Developer working for ThoughtWorks","author":"Mario Fernandez","url":"https://hceris.com","twitter":"@sirech"},"group":[{"frontmatter":{"layout":"post","title":"The Humble Extract Method","path":"/the-humble-extract-method/","categories":["Practices","Software Engineering","Refactoring"],"date":"2023/02/27","draft":false,"description":"The extract method refactoring is a low-cost, high-impact tool to increase maintainability in your code. Let's talk about its benefits"}},{"frontmatter":{"layout":"post","title":"Book Review: Effective Remote Work","path":"/book-review-effective-remote-work/","categories":["Book Review","Software Engineering","Practices","Team Organization","Career"],"date":"2022/11/27","draft":false,"description":"Effective remote work is a book about making remote work successful, both for employees and their company"}},{"frontmatter":{"layout":"post","title":"Anatomy of a Successful Retro","path":"/anatomy-of-a-successful-retro/","categories":["Agile","Practices","Software Engineering"],"date":"2022/10/16","draft":false,"description":"Let's talk about a structure for retrospectives that's effective and easy to implement. Make sure you get value out of doing retros"}},{"frontmatter":{"layout":"post","title":"Understanding a Software Team Lead's Responsibilities","path":"/software-team-lead-responsibilities/","categories":["Practices","Software Engineering","Agile","Team Organization"],"date":"2021/08/29","draft":false,"description":"What are the software team lead responsibilities? In this blog, let's define them from the perspective of servant leadership."}},{"frontmatter":{"layout":"post","title":"How Do You Structure an Engineering Team?","path":"/how-do-you-structure-an-engineering-team/","categories":["Practices","Software Engineering","Agile","Team Organization"],"date":"2021/07/31","draft":false,"description":"An engineering team structure is about finding a way to provide autonomy, mastery, and purpose to its team members. Let's explore more."}},{"frontmatter":{"layout":"post","title":"Choosing an Engineering Organizational Structure","path":"/choosing-an-engineering-organizational-structure/","categories":["Practices","Software Engineering","Agile","Team Organization"],"date":"2021/07/16","draft":false,"description":"To scale an engineering organization, it helps to have a engineering organizational structure that encourages autonomy and collaboration."}},{"frontmatter":{"layout":"post","title":"Monitoring Alerts That Don't Suck","path":"/monitoring-alerts-that-dont-suck/","categories":["Monitoring","Practices","Alerts","On-Call"],"date":"2021/07/02","draft":false,"description":"If you've been part of an On-Call rotation, you know how a bad setup will leave you (literally) sleepless. Let's work on fixing that"}},{"frontmatter":{"layout":"post","title":"Story Points in Depth: Everything You Need to Know","path":"/story-points-in-depth-everything-you-need-to-know/","categories":["Practices","Architecture","Software Engineering","Agile"],"date":"2021/06/03","draft":false,"description":"Story points create a measurement that represents the amount of time it takes to complete a task. They provide a view of the expected return on investment."}},{"frontmatter":{"layout":"post","title":"Scalable Architecture: A Definition and How-To Guide","path":"/scalable-architecture-a-definition-and-how-to-guide/","categories":["Practices","Architecture","Software Engineering"],"date":"2021/05/18","draft":false,"description":"Using cloud technologies, it's possible to quickly build a solution with scalable architecture that works in almost any situation."}},{"frontmatter":{"layout":"post","title":"Book Review: Management 3.0","path":"/book-review-management-3-dot-0/","categories":["Book Review","Practices","Agile"],"date":"2021/05/09","draft":false,"description":"Management in the context of Agile. How does it even work? This book is about building high performing teams and leading them"}},{"frontmatter":{"layout":"post","title":"Why Is Refactoring Your Code Important in Agile?","path":"/why-is-refactoring-your-code-important-in-agile/","categories":["Practices","Software Engineering","Agile","Refactoring"],"date":"2021/05/02","draft":false,"description":"Learn why refactoring your code is important. Foster experimentation and lightweight solutions, not excessive planning and fear of change."}},{"frontmatter":{"layout":"post","title":"What Is Code Duplication? A Definition and Overview","path":"/what-is-code-duplication-definition-and-overview/","categories":["Practices","Architecture","Software Engineering"],"date":"2021/04/18","draft":false,"description":"Code duplication makes software less maintainable and reduces our ability to iterate fast. Learn what duplication is and how to prevent it"}},{"frontmatter":{"layout":"post","title":"Book Review: Accelerate","path":"/book-review-accelerate/","categories":["Book Review","Practices","Team Organization","Continuous Delivery"],"date":"2021/03/07","draft":false,"description":"Accelerate is the book you need to read if you want to understand why continuous delivery is a tool for companies to deliver better results"}},{"frontmatter":{"layout":"post","title":"Book Review: Team topologies","path":"/book-review-team-topologies/","categories":["Book Review","Practices","Team Organization"],"date":"2021/02/08","draft":false,"description":"Team topologies is a book that proposes four ways of organizing teams that aim to empower them to build better software"}},{"frontmatter":{"layout":"post","title":"Keeping a technical backlog","path":"/keeping-a-technical-backlog/","categories":["Agile","Practices","Leadership"],"date":"2020/12/04","draft":false,"description":"You are writing high-quality technical stories and including them in every iteration. Find a home for them in your technical backlog"}},{"frontmatter":{"layout":"post","title":"Book Review: Working effectively with legacy code","path":"/book-review-working-effectively-with-legacy-code/","categories":["Book Review","Architecture","Practices"],"date":"2020/11/12","draft":false,"description":"Working effectively with legacy code is an excellent resource when dealing with hairy, messy pieces of legacy code that nobody wants to touch"}},{"frontmatter":{"layout":"post","title":"Getting technical stories into an iteration","path":"/getting-technical-stories-into-an-iteration/","categories":["Agile","Practices","Leadership"],"date":"2020/11/05","draft":false,"description":"Writing technical stories is only the first step. Integrating them in an iteration is where progress happens. Don't avoid this discussion"}},{"frontmatter":{"layout":"post","title":"Technical stories, a miscast artifact of agile development","path":"/technical-stories-a-miscast-artifact-of-agile-development/","categories":["Agile","Practices","Leadership"],"date":"2020/09/24","draft":false,"description":"Technical stories are misused. If used correctly, they help shape the technical vision. If not, they just enable skipping essential work"}},{"frontmatter":{"layout":"post","title":"Dev huddle as a tool to achieve alignment among developers","path":"/dev-huddle-as-a-tool-to-achieve-alignment-among-developers/","categories":["Agile","Practices","Leadership"],"date":"2020/08/30","draft":false,"description":"A well-run dev huddle increases the alignment among the developers of a team. I'm going to share my experience preparing for and running it"}}],"pathPrefix":"blog/tags/practices","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"siteMetadata":{"title":"Mario Fernandez","description":"This is the blog from Mario Fernandez, a Software Developer working for ThoughtWorks","author":"Mario Fernandez","url":"https://hceris.com","twitter":"@sirech"}}}},"staticQueryHashes":[],"slicesMap":{}}