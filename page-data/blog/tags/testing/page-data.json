{"componentChunkName":"component---src-templates-blog-index-js","path":"/blog/tags/testing/","result":{"pageContext":{"siteMetadata":{"title":"Mario Fernandez","description":"This is the blog from Mario Fernandez, a Software Developer working for Meta","author":"Mario Fernandez","url":"https://hceris.com","twitter":"@sirech"},"group":[{"frontmatter":{"layout":"post","title":"Book Review: Unit Testing","path":"/book-review-unit-testing/","categories":["Book Review","Software Engineering","Practices","Testing"],"date":"2023/04/18","draft":false,"description":"Unit testing is a book about testing that you should not skip, as it is an excellent source to improve your testing skills"}},{"frontmatter":{"layout":"post","title":"Fail a test in Jest if an unexpected network request happens","path":"/jest-fail-test-if-unexpected-network-request-happens/","categories":["React","Jest","Testing","react-testing-library","create-react-app","axios"],"date":"2019/12/08","draft":false,"description":"Automatically failing unit tests with Jest in React when network requests are made will make your tests more reliable and easier to maintain"}},{"frontmatter":{"layout":"post","title":"How to split the deployment of your front end and back end with the help of Consumer Driven Contract Testing","path":"/split-frontend-backend-deployment-with-cdcs/","categories":["Testing","Contract Testing","Pact","Continuous Delivery","Jest","CircleCI"],"date":"2019/11/12","draft":false,"description":"By using contract tests, you can build more independent frontend and backends that can be deployed separately. That way, you can get faster feedback"}},{"frontmatter":{"layout":"post","title":"Kotlin tapas: Get a taste of Kotlin","path":"/kotlin-tapas-a-taste-of-kotlin/","categories":["Kotlin","Tapas","Testing"],"date":"2019/10/27","draft":false,"description":"A bunch of bite sized tapas to get a first taste of Kotlin"}},{"frontmatter":{"layout":"post","title":"Descriptive assertions in Kotlin for clearer tests","path":"/descriptive-assertions-in-kotlin/","categories":["Kotlin","Testing","Strikt"],"date":"2019/09/28","draft":false,"description":"Readable assertions will make your Kotlin code a lot more self describing and your tests more maintainable"}},{"frontmatter":{"layout":"post","title":"Mock verification in Kotlin using MockK and Atrium","path":"/mock-verification-in-kotlin/","categories":["Kotlin","Testing","MockK","SpringBoot","Atrium"],"date":"2019/05/27","draft":false,"description":"When working with Kotlin you might need to build some non trivial mocks that need to be verified. Here is how to do it by combining MockK and Atrium"}},{"frontmatter":{"layout":"post","title":"Recording APIs with WireMock","path":"/recording-apis-with-wiremock/","categories":["Java","WireMock","SpringBoot","Testing"],"date":"2018/09/10","draft":false,"description":"Using WireMock to record third party API calls you can get high quality mocks that reflect reality and are much easier to maintain"}}],"pathPrefix":"blog/tags/testing","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"siteMetadata":{"title":"Mario Fernandez","description":"This is the blog from Mario Fernandez, a Software Developer working for Meta","author":"Mario Fernandez","url":"https://hceris.com","twitter":"@sirech"}}}},"staticQueryHashes":[],"slicesMap":{}}