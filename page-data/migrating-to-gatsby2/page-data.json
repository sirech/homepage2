{"componentChunkName":"component---src-templates-blog-post-js","path":"/migrating-to-gatsby2/","result":{"data":{"site":{"siteMetadata":{"title":"Mario Fernandez","description":"This is the blog from Mario Fernandez, a Software Developer working for ThoughtWorks","author":"Mario Fernandez","url":"https://hceris.com","twitter":"@sirech"}},"post":{"id":"27bbd9cb-7cd5-5132-99bd-7ae198f8602f","html":"<p>I have been using <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a> for about 6 months, and I am quite <a href=\"../migrating-to-gatsby\">happy with it</a>.</p>\n<p>Recently <em>Version 2</em> was <a href=\"https://www.gatsbyjs.org/blog/2018-09-17-gatsby-v2/\" target=\"_blank\" rel=\"noopener noreferrer\">released</a>. It has quite a few improvements. It is faster, smaller, and it brings major library updates:</p>\n<ul>\n<li>React 16.5</li>\n<li>Webpack 4</li>\n<li><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Babel 7</a></li>\n</ul>\n<p>The official documentation has a <a href=\"https://www.gatsbyjs.org/docs/migrating-from-v1-to-v2/\" target=\"_blank\" rel=\"noopener noreferrer\">comprehensive migration guide</a>, which is what I followed. I had to spend some extra effort to get everything running again, though.</p>\n<!--more-->\n<h2>Removing old plugins</h2>\n<p>I had some plugins that either stopped working or that I actually did not use at all, so I did some cleanup. <code class=\"language-text\">gatsby-plugin-manifest</code>, <code class=\"language-text\">gatsby-plugin-google-analytics</code>, <code class=\"language-text\">gatsby-plugin-react-next</code> are out. Conversely, I added <code class=\"language-text\">gatsby-plugin-layout</code>, as <em>Gatsby 2</em> has changed how the main layout works, and I did not want to change too much at once.</p>\n<h2>Missing favicon</h2>\n<p>I had my <em>favicon</em> under <em>static/img</em>, which stopped working. Instead I went with another plugin <a href=\"https://github.com/Creatiwity/gatsby-plugin-favicon\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-plugin-favicon</a>, which works basically out of the box.</p>\n<h2>Global styles</h2>\n<p>I mostly use <a href=\"https://github.com/css-modules/css-modules\" target=\"_blank\" rel=\"noopener noreferrer\">CSS Modules</a> for styling, but I have some global styles that I use for convenience and to style <a href=\"https://github.com/xtianmiller/emergence.js/blob/master/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">emergence</a>. It seems that <em>Gatsby 2</em> is stricter about how assets are imported, as these stylings were not being applied anymore. I had to extract them from a component to a proper <a href=\"https://github.com/sirech/homepage2/blob/master/src/layouts/globals.scss\" target=\"_blank\" rel=\"noopener noreferrer\">global file</a>.</p>\n<h2>Babel 7 and Jest</h2>\n<p><em>Babel 7</em> and <em>Jest</em> do not play nice with each other, as <a href=\"https://www.google.de/search?q=jest+babel+7&#x26;oq=jest+babel+7&#x26;aqs=chrome..69i57j69i60l3j0l2.3871j0j7&#x26;sourceid=chrome&#x26;ie=UTF-8\" target=\"_blank\" rel=\"noopener noreferrer\">many</a> resources illustrate. Getting this to work without breaking the normal compilation process took me some time to figure out. In the end I am doing it through the <em>Jest</em> configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">moduleNameMapper</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'\\\\.(jpg|jpeg|png|svg|woff|woff2)$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;rootDir>/__mocks__/fileMock.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'^.*\\\\.s?css$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'identity-obj-proxy'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'^.+\\\\.jsx?$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./jest/transformer.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">setupFiles</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&lt;rootDir>/setupTests.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">testPathIgnorePatterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/node_modules/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;rootDir>/.cache/'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">globals</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">__PATH_PREFIX__</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I am using a custom transformer that applies the new <em>Babel</em> presets, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">babelrc</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-jest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTransformer</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span></code></pre></div>\n<p>I ended up having to install some extra dependencies:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add --dev babel-jest babel-core@^7.0.0-bridge.0 @babel/core regenerator-runtime</code></pre></div>\n<p>This made it work although it is a bit fragile. Trying to stop using <code class=\"language-text\">graphql</code> as a global gave me a lot of errors, for instance.</p>\n<h2>Up and running</h2>\n<p>And that is basically it, now the whole site runs on the most modern version of most packages, which is great. I am looking forward to use some of the new <em>fancy</em> features at some point.</p>","frontmatter":{"layout":"post","title":"Migrating to Gatsby 2","path":"/migrating-to-gatsby2/","categories":["React","Gatsby"],"date":"2018/10/03","draft":false,"description":"Gatsby 2 is out! How did the migration go?","canonical":null,"image":null}},"related":{"nodes":[]},"previous":{"frontmatter":{"title":"Replacing ESLint with prettier","path":"/replacing-eslint-with-prettier/","date":"2018/08/29"}},"next":{"frontmatter":{"title":"Recording APIs with WireMock","path":"/recording-apis-with-wiremock/","date":"2018/09/10"}}},"pageContext":{"related":[],"previous":"/replacing-eslint-with-prettier/","next":"/recording-apis-with-wiremock/"}},"staticQueryHashes":[]}