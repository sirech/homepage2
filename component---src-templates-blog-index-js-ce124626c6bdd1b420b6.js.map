{"version":3,"file":"component---src-templates-blog-index-js-ce124626c6bdd1b420b6.js","mappings":"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","sources":["webpack://homepage/./src/components/Categories/index.jsx","webpack://homepage/./src/components/Time/index.jsx","webpack://homepage/./src/components/Time/style.module.scss","webpack://homepage/./src/prop-types/frontmatter.js","webpack://homepage/./src/prop-types/site.js","webpack://homepage/./src/components/SitePostSummary/index.jsx","webpack://homepage/./src/components/SitePostSummary/style.module.scss","webpack://homepage/./src/components/Pagination/index.jsx","webpack://homepage/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { addIndex, map } from 'ramda'\n\nimport Category from '../Category'\n\nconst renderCategories = (data) => {\n  return addIndex(map)((item, i) => (\n    <Category key={i} item={item} text={item} />\n  ))(data)\n}\n\nconst Categories = ({ categories }) => <>{renderCategories(categories)}</>\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\nexport default Categories\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { time } from './style.module.scss'\n\nconst Time = ({ date }) => (\n  <time className={time} dateTime={date}>\n    {date}\n  </time>\n)\n\nTime.propTypes = {\n  date: PropTypes.string.isRequired,\n}\n\nexport default Time\n","// extracted by mini-css-extract-plugin\nexport var time = \"style-module--time--ebc21\";","import PropTypes from 'prop-types'\n\nexport default PropTypes.shape({\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: PropTypes.string.isRequired,\n  layout: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  draft: PropTypes.bool.isRequired,\n  description: PropTypes.string,\n}).isRequired\n","import PropTypes from 'prop-types'\n\nexport default PropTypes.shape({\n  siteMetadata: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    twitter: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\nimport { Link } from 'gatsby'\n\nimport Container from 'components/Container'\nimport Categories from 'components/Categories'\nimport Time from 'components/Time'\n\nimport { articles, article, articleBox } from './style.module.scss'\n\nimport frontmatterType from 'types/frontmatter'\n\nconst SitePostSummary = ({ data: { frontmatter } }) => {\n  const { title, path, date, categories, description } = frontmatter\n\n  return (\n    <Container>\n      <div className={cx(articles)}>\n        <article key={path} className={cx(article, articleBox)}>\n          <header>\n            <Link to={path}>\n              <h3>{title}</h3>\n            </Link>\n            <Time date={date} />\n            <Categories categories={categories} />\n          </header>\n          <section>{description}</section>\n        </article>\n      </div>\n    </Container>\n  )\n}\n\nSitePostSummary.propTypes = {\n  data: PropTypes.shape({\n    frontmatter: frontmatterType,\n  }).isRequired,\n}\n\nexport default SitePostSummary\n","// extracted by mini-css-extract-plugin\nexport var article = \"style-module--article--a2553\";\nexport var articleBox = \"style-module--articleBox--5cc9b\";\nexport var articles = \"style-module--articles--b19bb\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { Link } from 'gatsby'\nimport { range } from 'ramda'\n\nimport Container from '../Container'\n\nconst url = (index, pathPrefix) =>\n  index === 1 ? `/${pathPrefix}/` : `/${pathPrefix}/${index}`\n\nconst previousDisabled = (index) => index === 1\nconst nextDisabled = (index, pageCount) => index === pageCount\n\nconst previous = (index, pathPrefix) => (\n  <Link className=\"page-link\" to={url(index - 1, pathPrefix)}>\n    <i className=\"fa fa-caret-left\" />\n  </Link>\n)\n\nconst next = (index, pathPrefix) => (\n  <Link className=\"page-link\" to={url(index + 1, pathPrefix)}>\n    <i className=\"fa fa-caret-right\" />\n  </Link>\n)\n\nconst pages = (index, pageCount, pathPrefix) =>\n  range(1, pageCount + 1).map((pageNumber) => (\n    <li\n      className={cx('page-item', { active: pageNumber === index })}\n      key={pageNumber}\n    >\n      <Link className=\"page-link\" to={url(pageNumber, pathPrefix)}>\n        {pageNumber}\n      </Link>\n    </li>\n  ))\n\nconst Pagination = ({ index, pageCount, pathPrefix }) => (\n  <Container>\n    <nav className=\"mt-4\">\n      {pageCount > 1 && (\n        <ul className=\"pagination justify-content-center\">\n          <li\n            className={cx('page-item', { disabled: previousDisabled(index) })}\n          >\n            {previous(index, pathPrefix)}\n          </li>\n          {pages(index, pageCount, pathPrefix)}\n          <li\n            className={cx('page-item', {\n              disabled: nextDisabled(index, pageCount),\n            })}\n          >\n            {next(index, pathPrefix)}\n          </li>\n        </ul>\n      )}\n    </nav>\n  </Container>\n)\n\nPagination.propTypes = {\n  index: PropTypes.number,\n  pageCount: PropTypes.number,\n  pathPrefix: PropTypes.string,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\n\nimport { path as Rpath, filter, map, addIndex, pipe } from 'ramda'\n\nimport SitePostSummary from '../components/SitePostSummary'\nimport Pagination from '../components/Pagination'\n\nimport siteType from '../prop-types/site'\nimport frontmatterType from '../prop-types/frontmatter'\n\nconst helmet = (site) => {\n  const { title, description, url } = site\n  return (\n    <Helmet\n      title={title}\n      meta={[\n        { name: 'twitter:card', content: 'summary' },\n        { property: 'og:title', content: title },\n        { property: 'og:type', content: 'website' },\n        { property: 'og:description', content: description },\n        { property: 'og:url', content: url },\n      ]}\n    />\n  )\n}\n\nconst posts = (group) => {\n  return pipe(\n    filter((data) => {\n      const layout = Rpath(['frontmatter', 'layout'])(data)\n      const path = Rpath(['frontmatter', 'path'])(data)\n      return layout === 'post' && path !== '/404/'\n    }),\n    addIndex(map)((data, i) => <SitePostSummary data={data} isIndex key={i} />)\n  )(group)\n}\n\nconst IndexPage = ({ pageContext }) => {\n  const { group, additionalContext, index, pageCount, pathPrefix } = pageContext\n\n  return (\n    <div>\n      {helmet(additionalContext.siteMetadata)}\n      {posts(group)}\n      <Pagination index={index} pageCount={pageCount} pathPrefix={pathPrefix} />\n    </div>\n  )\n}\n\nIndexPage.propTypes = {\n  pageContext: PropTypes.shape({\n    index: PropTypes.number,\n    pageCount: PropTypes.number,\n    group: PropTypes.arrayOf(\n      PropTypes.shape({\n        frontmatter: frontmatterType,\n      })\n    ),\n    additionalContext: siteType,\n    pathPrefix: PropTypes.string,\n  }),\n}\n\nexport default IndexPage\n"],"names":["Categories","categories","React","data","addIndex","map","item","i","Category","key","text","propTypes","PropTypes","isRequired","Time","date","className","dateTime","layout","path","title","draft","description","siteMetadata","url","author","twitter","SitePostSummary","frontmatter","Container","cx","Link","to","frontmatterType","index","pathPrefix","previousDisabled","nextDisabled","pageCount","Pagination","disabled","previous","pages","range","pageNumber","active","next","IndexPage","pageContext","group","additionalContext","site","Helmet","meta","name","content","property","helmet","pipe","filter","Rpath","isIndex","posts","siteType"],"sourceRoot":""}