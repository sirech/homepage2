version: 2
jobs:
  build:

    working_directory: ~/app

    docker:
      - image: cimg/node:14.4.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD

    steps:

      - checkout
      - restore_cache:
          key: npm-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: npm-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: ./go linter-js
      - run: ./go linter-css
      - run: ./go linter-text
      - run: yarn test --coverage --runInBand
      - run:
          name: Upload coverage results
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls
          when: always
      - run:
          name: Build and package
          command: |
            SITE_URL=$SITE_URL yarn run build
            find public -regextype posix-basic -regex '.*\.\(js\|css\)\(.map\)\?$' -print0 | xargs --null -I@ sh -c "gzip -c @ > @.gz"
      - persist_to_workspace:
          root: public
          paths:
            - "*"

  deploy:

    docker:
      - image: cimg/node:14.4.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD

    steps:

      - add_ssh_keys:
      - attach_workspace:
          at: public
      - run: scp -o StrictHostKeyChecking=no -r public $DEPLOY_USER@$DEPLOY_HOST:/tmp/homepage2-${CIRCLE_BUILD_NUM}
      - run: ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "${DEPLOY_PATH}/bin/promote /tmp/homepage2-${CIRCLE_BUILD_NUM} /srv/main"

  security:

    docker:
      - image: owasp/zap2docker-weekly
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD

    steps:
      - run: zap-baseline.py -t $SITE_URL -u $ZAP_CONF_URL

  post-deploy:

    docker:
      - image: cypress/browsers:node14.7.0-chrome84
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD

    steps:

      - checkout
      - restore_cache:
          key: npm-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: npm-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: ./go test-e2e --record
      - run: ./go lighthouse

      - store_artifacts:
          path: reports

workflows:
  version: 2
  pipeline:
    jobs:
      - build:
          context:
            - docker-context
      - deploy:
          context:
            - docker-context
          filters:
            branches:
              only: master
          requires:
            - build
      - security:
          context:
            - docker-context
          requires:
            - deploy
      - post-deploy:
          context:
            - docker-context
          requires:
            - deploy
